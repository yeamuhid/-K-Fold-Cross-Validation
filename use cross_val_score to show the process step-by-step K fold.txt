from sklearn.model_selection import KFold
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import load_iris
from sklearn.metrics import accuracy_score
import numpy as np

# Load the dataset
data = load_iris()
X, y = data.data, data.target

# Define the number of splits
kf = KFold(n_splits=5, shuffle=True, random_state=42)

# Initialize the model
model = RandomForestClassifier()

# List to store accuracy scores for each fold
scores = []

# Perform K-Fold Cross Validation
for train_index, test_index in kf.split(X):
    # Split data into train and test sets
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]
    
    # Train the model on the training set
    model.fit(X_train, y_train)
    
    # Predict on the test set
    y_pred = model.predict(X_test)
    
    # Calculate accuracy and store it
    accuracy = accuracy_score(y_test, y_pred)
    scores.append(accuracy)
    print(f"Accuracy for this fold: {accuracy}")

# Calculate and print the mean and standard deviation of accuracy
print("Mean cross-validation accuracy:", np.mean(scores))
print("Standard deviation of cross-validation accuracy:", np.std(scores))
